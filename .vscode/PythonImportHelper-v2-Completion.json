[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "django.urls",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.urls",
        "description": "django.urls",
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "get_lexer_by_name",
        "importPath": "pygments.lexers",
        "description": "pygments.lexers",
        "isExtraImport": true,
        "detail": "pygments.lexers",
        "documentation": {}
    },
    {
        "label": "get_all_lexers",
        "importPath": "pygments.lexers",
        "description": "pygments.lexers",
        "isExtraImport": true,
        "detail": "pygments.lexers",
        "documentation": {}
    },
    {
        "label": "HtmlFormatter",
        "importPath": "pygments.formatters.html",
        "description": "pygments.formatters.html",
        "isExtraImport": true,
        "detail": "pygments.formatters.html",
        "documentation": {}
    },
    {
        "label": "highlight",
        "importPath": "pygments",
        "description": "pygments",
        "isExtraImport": true,
        "detail": "pygments",
        "documentation": {}
    },
    {
        "label": "get_all_styles",
        "importPath": "pygments.styles",
        "description": "pygments.styles",
        "isExtraImport": true,
        "detail": "pygments.styles",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "mixins",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Snippet",
        "importPath": "snippets.models",
        "description": "snippets.models",
        "isExtraImport": true,
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CHOICES",
        "importPath": "snippets.models",
        "description": "snippets.models",
        "isExtraImport": true,
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "STYLE_CHOICES",
        "importPath": "snippets.models",
        "description": "snippets.models",
        "isExtraImport": true,
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "format_suffix_patterns",
        "importPath": "rest_framework.urlpatterns",
        "description": "rest_framework.urlpatterns",
        "isExtraImport": true,
        "detail": "rest_framework.urlpatterns",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "JSONParser",
        "importPath": "rest_framework.parsers",
        "description": "rest_framework.parsers",
        "isExtraImport": true,
        "detail": "rest_framework.parsers",
        "documentation": {}
    },
    {
        "label": "JSONRenderer",
        "importPath": "rest_framework.renderers",
        "description": "rest_framework.renderers",
        "isExtraImport": true,
        "detail": "rest_framework.renderers",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "first_api.asgi",
        "description": "first_api.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "first_api.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-sl05+^h$dh+43*j#r)9r=kmy$u48n^+)pq7%^r(=gfgu6l(3t2\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-sl05+^h$dh+43*j#r)9r=kmy$u48n^+)pq7%^r(=gfgu6l(3t2\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"snippets\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"snippets\",\n    \"rest_framework\",\n    # \"corsheaders\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "MIDDLEWARE = [\n    # \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "ROOT_URLCONF = \"first_api.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [\n            os.path.join(BASE_DIR, \"build\"),\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [\n            os.path.join(BASE_DIR, \"build\"),\n        ],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "WSGI_APPLICATION = \"first_api.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    },\n    # \"default\": {\n    #     \"ENGINE\": \"django.db.backends.mysql\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    },\n    # \"default\": {\n    #     \"ENGINE\": \"django.db.backends.mysql\",\n    #     \"NAME\": \"database_name\",\n    #     \"PASSWORD\" : \"password\",\n    #     \"USER\":\"user_name\",",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"build/static\"),\n# ]",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"build/static\"),\n# ]\n# STATIC_ROOT = os.path.join(BASE_DIR, \"static\")",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"build/static\"),\n# ]\n# STATIC_ROOT = os.path.join(BASE_DIR, \"static\")\n# Default primary key field type",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = \"static/\"\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"build/static\"),\n# ]\n# STATIC_ROOT = os.path.join(BASE_DIR, \"static\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# STATICFILES_DIRS = [\n#     os.path.join(BASE_DIR, \"build/static\"),\n# ]\n# STATIC_ROOT = os.path.join(BASE_DIR, \"static\")\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {\n#     \"DEFAULT_PERMISSION_CLASSES\": {\"rest_framework.IsAuthenticated\"},",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# REST_FRAMEWORK = {\n#     \"DEFAULT_PERMISSION_CLASSES\": {\"rest_framework.IsAuthenticated\"},\n#     \"DEFAULT_AUTHENTICATION_CLASSES\": {\n#         \"rest_framework.authencation.SessionAuthentication\"\n#     },\n# }\nCORS_ORGIN_ALLOW_ALL = True",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ORGIN_ALLOW_ALL",
        "kind": 5,
        "importPath": "first_api.settings",
        "description": "first_api.settings",
        "peekOfCode": "CORS_ORGIN_ALLOW_ALL = True",
        "detail": "first_api.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "first_api.urls",
        "description": "first_api.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"\", include(\"snippets.urls\")),\n]",
        "detail": "first_api.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "first_api.wsgi",
        "description": "first_api.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "first_api.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "snippets.migrations.0001_initial",
        "description": "snippets.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Snippet',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('created', models.DateTimeField(auto_now_add=True)),",
        "detail": "snippets.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "snippets.migrations.0002_snippet_highlighted_snippet_owner",
        "description": "snippets.migrations.0002_snippet_highlighted_snippet_owner",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('snippets', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='snippet',\n            name='highlighted',\n            field=models.TextField(blank=True, null=True),",
        "detail": "snippets.migrations.0002_snippet_highlighted_snippet_owner",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "snippets.migrations.0003_alter_snippet_owner",
        "description": "snippets.migrations.0003_alter_snippet_owner",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('snippets', '0002_snippet_highlighted_snippet_owner'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='snippet',\n            name='owner',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to=settings.AUTH_USER_MODEL),",
        "detail": "snippets.migrations.0003_alter_snippet_owner",
        "documentation": {}
    },
    {
        "label": "SnippetsConfig",
        "kind": 6,
        "importPath": "snippets.apps",
        "description": "snippets.apps",
        "peekOfCode": "class SnippetsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'snippets'",
        "detail": "snippets.apps",
        "documentation": {}
    },
    {
        "label": "Snippet",
        "kind": 6,
        "importPath": "snippets.models",
        "description": "snippets.models",
        "peekOfCode": "class Snippet(models.Model):\n    created = models.DateTimeField(auto_now_add=True)\n    title = models.CharField(max_length=100, blank=True, default=\"\")\n    code = models.TextField()\n    linenos = models.BooleanField(default=False)\n    language = models.CharField(\n        choices=LANGUAGE_CHOICES, default=\"python\", max_length=100\n    )\n    style = models.CharField(choices=STYLE_CHOICES, default=\"friendly\", max_length=100)\n    # to manage authentication",
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "LEXERS",
        "kind": 5,
        "importPath": "snippets.models",
        "description": "snippets.models",
        "peekOfCode": "LEXERS = [item for item in get_all_lexers() if item[1]]\nLANGUAGE_CHOICES = sorted([(item[1][0], item[0]) for item in LEXERS])\nSTYLE_CHOICES = sorted([(item, item) for item in get_all_styles()])\nclass Snippet(models.Model):\n    created = models.DateTimeField(auto_now_add=True)\n    title = models.CharField(max_length=100, blank=True, default=\"\")\n    code = models.TextField()\n    linenos = models.BooleanField(default=False)\n    language = models.CharField(\n        choices=LANGUAGE_CHOICES, default=\"python\", max_length=100",
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CHOICES",
        "kind": 5,
        "importPath": "snippets.models",
        "description": "snippets.models",
        "peekOfCode": "LANGUAGE_CHOICES = sorted([(item[1][0], item[0]) for item in LEXERS])\nSTYLE_CHOICES = sorted([(item, item) for item in get_all_styles()])\nclass Snippet(models.Model):\n    created = models.DateTimeField(auto_now_add=True)\n    title = models.CharField(max_length=100, blank=True, default=\"\")\n    code = models.TextField()\n    linenos = models.BooleanField(default=False)\n    language = models.CharField(\n        choices=LANGUAGE_CHOICES, default=\"python\", max_length=100\n    )",
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "STYLE_CHOICES",
        "kind": 5,
        "importPath": "snippets.models",
        "description": "snippets.models",
        "peekOfCode": "STYLE_CHOICES = sorted([(item, item) for item in get_all_styles()])\nclass Snippet(models.Model):\n    created = models.DateTimeField(auto_now_add=True)\n    title = models.CharField(max_length=100, blank=True, default=\"\")\n    code = models.TextField()\n    linenos = models.BooleanField(default=False)\n    language = models.CharField(\n        choices=LANGUAGE_CHOICES, default=\"python\", max_length=100\n    )\n    style = models.CharField(choices=STYLE_CHOICES, default=\"friendly\", max_length=100)",
        "detail": "snippets.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "snippets.serializers",
        "description": "snippets.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    # brcause this do not exist by default\n    snippets = serializers.PrimaryKeyRelatedField(\n        many=True, queryset=Snippet.objects.all()\n    )\n    class Meta:\n        model = User\n        fields = [\"id\", \"username\", \"snippets\"]\n\"\"\" class SnippetSerializer(serializers.Serializer):\n    id = serializers.IntegerField(",
        "detail": "snippets.serializers",
        "documentation": {}
    },
    {
        "label": "SnippetSerializer",
        "kind": 6,
        "importPath": "snippets.serializers",
        "description": "snippets.serializers",
        "peekOfCode": "class SnippetSerializer(serializers.ModelSerializer):\n    owner = serializers.ReadOnlyField(source=\"owner.username\")\n    class Meta:\n        model = Snippet\n        fields = [\"id\", \"title\", \"code\", \"linenos\", \"language\", \"style\",\"owner\"]",
        "detail": "snippets.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r\"snippets\", views.SnippetViewSet, basename=\"snippet\")\nrouter.register(r\"users\", views.UserViewSets, basename=\"user\")\n\"\"\"\nsnippet_list = SnippetViewSet.as_view({\n    'get': 'list',\n    'post': 'create'\n})\nsnippet_detail = SnippetViewSet.as_view({\n    'get': 'retrieve',",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "snippet_list",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "snippet_list = SnippetViewSet.as_view({\n    'get': 'list',\n    'post': 'create'\n})\nsnippet_detail = SnippetViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "snippet_detail",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "snippet_detail = SnippetViewSet.as_view({\n    'get': 'retrieve',\n    'put': 'update',\n    'patch': 'partial_update',\n    'delete': 'destroy'\n})\nsnippet_highlight = SnippetViewSet.as_view({\n    'get': 'highlight'\n}, renderer_classes=[renderers.StaticHTMLRenderer])\nuser_list = UserViewSet.as_view({",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "snippet_highlight",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "snippet_highlight = SnippetViewSet.as_view({\n    'get': 'highlight'\n}, renderer_classes=[renderers.StaticHTMLRenderer])\nuser_list = UserViewSet.as_view({\n    'get': 'list'\n})\nuser_detail = UserViewSet.as_view({\n    'get': 'retrieve'\n})\n\"\"\"",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "user_list",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "user_list = UserViewSet.as_view({\n    'get': 'list'\n})\nuser_detail = UserViewSet.as_view({\n    'get': 'retrieve'\n})\n\"\"\"\n# The API URLs are now determined automatically by the router.\nurlpatterns = [\n    path(\"\", include(router.urls)),",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "user_detail",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "user_detail = UserViewSet.as_view({\n    'get': 'retrieve'\n})\n\"\"\"\n# The API URLs are now determined automatically by the router.\nurlpatterns = [\n    path(\"\", include(router.urls)),\n]\n# urlpatterns = [\n#     path(\"snippets/\", SnippetList.as_view()),",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "snippets.urls",
        "description": "snippets.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(router.urls)),\n]\n# urlpatterns = [\n#     path(\"snippets/\", SnippetList.as_view()),\n#     path(\"snippets/<int:pk>/\", SnippetDetail.as_view()),\n#     path(\"users/\", UserList.as_view()),\n#     path(\"users/<int:pk>/\", UserDetail.as_view()),\n# ]\n# # to allow many type of urls to be handle",
        "detail": "snippets.urls",
        "documentation": {}
    },
    {
        "label": "UserViewSets",
        "kind": 6,
        "importPath": "snippets.views",
        "description": "snippets.views",
        "peekOfCode": "class UserViewSets(viewsets.ReadOnlyModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\nclass SnippetViewSet(viewsets.ModelViewSet):\n    \"\"\"\n    This viewset automatically provides `list`, `create`, `retrieve`,\n    `update` and `destroy` actions.\n    Additionally we also provide an extra `highlight` action.\n    \"\"\"\n    queryset = Snippet.objects.all()",
        "detail": "snippets.views",
        "documentation": {}
    },
    {
        "label": "SnippetViewSet",
        "kind": 6,
        "importPath": "snippets.views",
        "description": "snippets.views",
        "peekOfCode": "class SnippetViewSet(viewsets.ModelViewSet):\n    \"\"\"\n    This viewset automatically provides `list`, `create`, `retrieve`,\n    `update` and `destroy` actions.\n    Additionally we also provide an extra `highlight` action.\n    \"\"\"\n    queryset = Snippet.objects.all()\n    serializer_class = SnippetSerializer\n    permission_classes = [\n        permissions.IsAuthenticatedOrReadOnly,",
        "detail": "snippets.views",
        "documentation": {}
    },
    {
        "label": "SnippetList",
        "kind": 6,
        "importPath": "snippets.views",
        "description": "snippets.views",
        "peekOfCode": "class SnippetList(generics.ListCreateAPIView):\n    queryset = Snippet.objects.all()\n    serializer_class = SnippetSerializer\n    permission_classes = [permissions.IsAuthenticatedOrReadOnly]\n    def perform_create(self, serializer):\n        serializer.save(owner=self.request.user)\n# unsing genrerics and mixins\n\"\"\" class SnippetList(\n    mixins.ListModelMixin, mixins.CreateModelMixin, generics.GenericAPIView\n):",
        "detail": "snippets.views",
        "documentation": {}
    },
    {
        "label": "SnippetDetail",
        "kind": 6,
        "importPath": "snippets.views",
        "description": "snippets.views",
        "peekOfCode": "class SnippetDetail(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Snippet.objects.all()\n    serializer_class = SnippetSerializer\n\"\"\" class SnippetDetail(APIView):\n    def get_object(self, pk):\n        try:\n            return Snippet.objects.get(pk=pk)\n        except Snippet.DoesNotExist:\n            raise Http404\n    def get(self, request, pk, format=None):",
        "detail": "snippets.views",
        "documentation": {}
    },
    {
        "label": "snippet_list",
        "kind": 2,
        "importPath": "snippets.views",
        "description": "snippets.views",
        "peekOfCode": "def snippet_list(request , format=None):\n    if request.method == \"POST\":\n        data = JSONParser.parse(request)\n        serializer = SnippetSerializer(data=data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\n        return JsonResponse(serializers.error, status=status.HTTP_400_BAD_REQUEST)\n    elif request.method == \"GET\":\n        data = Snippet.objects.all()",
        "detail": "snippets.views",
        "documentation": {}
    },
    {
        "label": "snippet_detail",
        "kind": 2,
        "importPath": "snippets.views",
        "description": "snippets.views",
        "peekOfCode": "def snippet_detail(request, pk, format=None):\n    try:\n        snippet = Snippet.objects.get(pk=pk)\n    except Snippet.DoesNotExist:\n        return HttpResponse(status=status.HTTP)\n    if request.method == \"GET\":\n        serializer = SnippetSerializer(snippet)\n        return JsonResponse(serializer.data)\n    elif request.method == \"PUT\":\n        data = JSONParser().parse(request)",
        "detail": "snippets.views",
        "documentation": {}
    },
    {
        "label": "SnippetsConfig",
        "kind": 6,
        "importPath": "apps",
        "description": "apps",
        "peekOfCode": "class SnippetsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'snippets'",
        "detail": "apps",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'first_api.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]