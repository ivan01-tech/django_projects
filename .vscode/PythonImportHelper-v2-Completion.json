[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "CategoryView",
        "importPath": "shop.views",
        "description": "shop.views",
        "isExtraImport": true,
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "ProductView",
        "importPath": "shop.views",
        "description": "shop.views",
        "isExtraImport": true,
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Article",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "ModelSerializer",
        "importPath": "rest_framework.serializers",
        "description": "rest_framework.serializers",
        "isExtraImport": true,
        "detail": "rest_framework.serializers",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "isExtraImport": true,
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "isExtraImport": true,
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.asgi",
        "description": "project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-8%!d1x5j3$ouyqb54a!sry!r8(*eqtwr!oi2$l(-!77(_$5fq#'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-8%!d1x5j3$ouyqb54a!sry!r8(*eqtwr!oi2$l(-!77(_$5fq#'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'shop',\n]",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'project.urls'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "ROOT_URLCONF = 'project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "project.settings",
        "description": "project.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "project.urls",
        "description": "project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api-auth/', include('rest_framework.urls')),\n    path('api/category/', CategoryView.as_view()),\n    path('api/product/', ProductView.as_view()),\n]",
        "detail": "project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "project.wsgi",
        "description": "project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "project.wsgi",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "shop.management.commands.init_local_dev",
        "description": "shop.management.commands.init_local_dev",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Initialize project for local development'\n    def handle(self, *args, **options):\n        self.stdout.write(self.style.MIGRATE_HEADING(self.help))\n        Category.objects.all().delete()\n        for data_category in CATEGORIES:\n            category = Category.objects.create(name=data_category['name'],\n                                               active=data_category['active'])\n            for data_product in data_category['products']:\n                product = category.products.create(name=data_product['name'],",
        "detail": "shop.management.commands.init_local_dev",
        "documentation": {}
    },
    {
        "label": "UserModel",
        "kind": 5,
        "importPath": "shop.management.commands.init_local_dev",
        "description": "shop.management.commands.init_local_dev",
        "peekOfCode": "UserModel = get_user_model()\nCATEGORIES = [\n    {\n        'name': 'Fruit',\n        'active': True,\n        'products': [\n            {\n                'name': 'Banane',\n                'active': True,\n                'articles': [",
        "detail": "shop.management.commands.init_local_dev",
        "documentation": {}
    },
    {
        "label": "CATEGORIES",
        "kind": 5,
        "importPath": "shop.management.commands.init_local_dev",
        "description": "shop.management.commands.init_local_dev",
        "peekOfCode": "CATEGORIES = [\n    {\n        'name': 'Fruit',\n        'active': True,\n        'products': [\n            {\n                'name': 'Banane',\n                'active': True,\n                'articles': [\n                    {",
        "detail": "shop.management.commands.init_local_dev",
        "documentation": {}
    },
    {
        "label": "ADMIN_ID",
        "kind": 5,
        "importPath": "shop.management.commands.init_local_dev",
        "description": "shop.management.commands.init_local_dev",
        "peekOfCode": "ADMIN_ID = 'admin-oc'\nADMIN_PASSWORD = 'password-oc'\nclass Command(BaseCommand):\n    help = 'Initialize project for local development'\n    def handle(self, *args, **options):\n        self.stdout.write(self.style.MIGRATE_HEADING(self.help))\n        Category.objects.all().delete()\n        for data_category in CATEGORIES:\n            category = Category.objects.create(name=data_category['name'],\n                                               active=data_category['active'])",
        "detail": "shop.management.commands.init_local_dev",
        "documentation": {}
    },
    {
        "label": "ADMIN_PASSWORD",
        "kind": 5,
        "importPath": "shop.management.commands.init_local_dev",
        "description": "shop.management.commands.init_local_dev",
        "peekOfCode": "ADMIN_PASSWORD = 'password-oc'\nclass Command(BaseCommand):\n    help = 'Initialize project for local development'\n    def handle(self, *args, **options):\n        self.stdout.write(self.style.MIGRATE_HEADING(self.help))\n        Category.objects.all().delete()\n        for data_category in CATEGORIES:\n            category = Category.objects.create(name=data_category['name'],\n                                               active=data_category['active'])\n            for data_product in data_category['products']:",
        "detail": "shop.management.commands.init_local_dev",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "shop.migrations.0001_initial",
        "description": "shop.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('date_created', models.DateTimeField(auto_now_add=True)),",
        "detail": "shop.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CategoryAdmin",
        "kind": 6,
        "importPath": "shop.admin",
        "description": "shop.admin",
        "peekOfCode": "class CategoryAdmin(admin.ModelAdmin):\n    list_display = ('name', 'active')\nclass ProductAdmin(admin.ModelAdmin):\n    list_display = ('name', 'category', 'active')\nclass ArticleAdmin(admin.ModelAdmin):\n    list_display = ('name', 'product', 'category', 'active')\n    @admin.display(description='Category')\n    def category(self, obj):\n        return obj.product.category\nadmin.site.register(Category, CategoryAdmin)",
        "detail": "shop.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "shop.admin",
        "description": "shop.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    list_display = ('name', 'category', 'active')\nclass ArticleAdmin(admin.ModelAdmin):\n    list_display = ('name', 'product', 'category', 'active')\n    @admin.display(description='Category')\n    def category(self, obj):\n        return obj.product.category\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Article, ArticleAdmin)",
        "detail": "shop.admin",
        "documentation": {}
    },
    {
        "label": "ArticleAdmin",
        "kind": 6,
        "importPath": "shop.admin",
        "description": "shop.admin",
        "peekOfCode": "class ArticleAdmin(admin.ModelAdmin):\n    list_display = ('name', 'product', 'category', 'active')\n    @admin.display(description='Category')\n    def category(self, obj):\n        return obj.product.category\nadmin.site.register(Category, CategoryAdmin)\nadmin.site.register(Product, ProductAdmin)\nadmin.site.register(Article, ArticleAdmin)",
        "detail": "shop.admin",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Category(models.Model):\n    date_created = models.DateTimeField(auto_now_add=True)\n    date_updated = models.DateTimeField(auto_now=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True)\n    active = models.BooleanField(default=False)\n    def __str__(self):\n        return self.name\nclass Product(models.Model):\n    date_created = models.DateTimeField(auto_now_add=True)",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Product(models.Model):\n    date_created = models.DateTimeField(auto_now_add=True)\n    date_updated = models.DateTimeField(auto_now=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True)\n    active = models.BooleanField(default=False)\n    category = models.ForeignKey('shop.Category', on_delete=models.CASCADE, related_name='products')\n    def __str__(self):\n        return self.name\nclass Article(models.Model):",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Article",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Article(models.Model):\n    date_created = models.DateTimeField(auto_now_add=True)\n    date_updated = models.DateTimeField(auto_now=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True)\n    active = models.BooleanField(default=False)\n    price = models.DecimalField(max_digits=4, decimal_places=2)\n    product = models.ForeignKey('shop.Product', on_delete=models.CASCADE, related_name='articles')\n    def __str__(self):\n        return self.name",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class CategorySerializer(ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ['id', 'date_created', 'date_updated', 'name']\nclass ProductSerializer(ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['id', 'date_created', 'date_updated', 'name', 'category']",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class ProductSerializer(ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['id', 'date_created', 'date_updated', 'name', 'category']",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "CategoryView",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class CategoryView(APIView):\n    def get(self, *args, **kwargs):\n        queryset = Category.objects.all()\n        serializer = CategorySerializer(queryset, many=True)\n        return Response(serializer.data)\nclass ProductView(APIView):\n    def get(self, *args, **kwargs):\n        queryset = Product.objects.all()\n        serializer = ProductSerializer(queryset, many=True)\n        return Response(serializer.data)",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "ProductView",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class ProductView(APIView):\n    def get(self, *args, **kwargs):\n        queryset = Product.objects.all()\n        serializer = ProductSerializer(queryset, many=True)\n        return Response(serializer.data)",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]